class LeadConversionDocumentCreator extends BaseDocumentCreator {
    constructor() {
        super('lead_conversion');
    }

    async createDocuments(records) {
        return records.map(record => {
            const metadata = {
                id: record.Id,
                leadId: record.LeadId,
                convertedDate: record.ConvertedDate,
                convertedAccountId: record.ConvertedAccountId,
                convertedContactId: record.ConvertedContactId,
                convertedOpportunityId: record.ConvertedOpportunityId,
                createdById: record.CreatedById,
                createdDate: record.CreatedDate,
                type: 'lead_conversion'
            };

            const content = `Lead ${record.LeadId} was converted on ${record.ConvertedDate}. 
                The lead was converted to Account ${record.ConvertedAccountId}, 
                Contact ${record.ConvertedContactId}, and 
                Opportunity ${record.ConvertedOpportunityId}. 
                The conversion was performed by user ${record.CreatedById}.`;

            return new Document({
                pageContent: content,
                metadata
            });
        });
    }
}

class LeadScoreDocumentCreator extends BaseDocumentCreator {
    constructor() {
        super('lead_score');
    }

    async createDocuments(records) {
        return records.map(record => {
            const metadata = {
                id: record.Id,
                leadId: record.LeadId,
                score: record.Score,
                grade: record.Grade,
                reason: record.Reason,
                modelId: record.ModelId,
                createdDate: record.CreatedDate,
                type: 'lead_score'
            };

            const content = `Lead ${record.LeadId} received a score of ${record.Score} 
                and grade ${record.Grade} on ${record.CreatedDate}. 
                Reason for the score: ${record.Reason}. 
                This score was generated by model ${record.ModelId}.`;

            return new Document({
                pageContent: content,
                metadata
            });
        });
    }
}

class OpportunityHistoryDocumentCreator extends BaseDocumentCreator {
    constructor() {
        super('opportunity_history');
    }

    async createDocuments(records) {
        return records.map(record => {
            const metadata = {
                id: record.Id,
                opportunityId: record.OpportunityId,
                field: record.Field,
                oldValue: record.OldValue,
                newValue: record.NewValue,
                createdDate: record.CreatedDate,
                createdById: record.CreatedById,
                stageName: record.StageName,
                amount: record.Amount,
                expectedRevenue: record.ExpectedRevenue,
                probability: record.Probability,
                forecastCategory: record.ForecastCategory,
                type: 'opportunity_history'
            };

            const content = `Opportunity ${record.OpportunityId} was updated on ${record.CreatedDate}. 
                Field '${record.Field}' was changed from '${record.OldValue}' to '${record.NewValue}'.
                Current stage: ${record.StageName}, Amount: ${record.Amount}, 
                Expected Revenue: ${record.ExpectedRevenue}, Probability: ${record.Probability}%.
                Forecast Category: ${record.ForecastCategory}.
                Update performed by user ${record.CreatedById}.`;

            return new Document({
                pageContent: content,
                metadata
            });
        });
    }
}

class CampaignInfluenceDocumentCreator extends BaseDocumentCreator {
    constructor() {
        super('campaign_influence');
    }

    async createDocuments(records) {
        return records.map(record => {
            const metadata = {
                id: record.Id,
                campaignId: record.CampaignId,
                opportunityId: record.OpportunityId,
                contactId: record.ContactId,
                modelId: record.ModelId,
                influence: record.Influence,
                revenue: record.Revenue,
                firstTouchDate: record.FirstTouchDate,
                lastTouchDate: record.LastTouchDate,
                createdDate: record.CreatedDate,
                type: 'campaign_influence'
            };

            const content = `Campaign ${record.CampaignId} influenced Opportunity ${record.OpportunityId} 
                with Contact ${record.ContactId}. Influence score: ${record.Influence}%, 
                attributed revenue: ${record.Revenue}. First touch on ${record.FirstTouchDate}, 
                last touch on ${record.LastTouchDate}. Analysis by model ${record.ModelId}.`;

            return new Document({
                pageContent: content,
                metadata
            });
        });
    }
}

module.exports = {
    // ... existing exports ...
    LeadConversionDocumentCreator,
    LeadScoreDocumentCreator,
    OpportunityHistoryDocumentCreator,
    CampaignInfluenceDocumentCreator
}; 